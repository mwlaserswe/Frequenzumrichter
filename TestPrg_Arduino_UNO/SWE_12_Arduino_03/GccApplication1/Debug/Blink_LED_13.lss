
Blink_LED_13.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000176  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  000001ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000021c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000069e  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000610  00000000  00000000  0000091a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000203  00000000  00000000  00000f2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001130  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000379  00000000  00000000  00001154  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000014cd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 b9 00 	jmp	0x172	; 0x172 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
int main(void)
{

	//DDRB = 0b11111111;		//DDRB in iom328p.h
	//DDRB = 0b00110000;		//DDRB in iom328p.h
	DDRB = (1 << PORTB4 | 1 << PORTB5);
  90:	80 e3       	ldi	r24, 0x30	; 48
  92:	84 b9       	out	0x04, r24	; 4
	 
	while (1)
	{	PORTB = 0x30;		//PORTB in iom328p.h
  94:	20 e3       	ldi	r18, 0x30	; 48
  96:	25 b9       	out	0x05, r18	; 5
		
		for (cnt=0; cnt<=50000; cnt++) {;}
  98:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
  9c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
  a0:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
  a4:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
  a8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  ac:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  b0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
  b4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
  b8:	81 35       	cpi	r24, 0x51	; 81
  ba:	93 4c       	sbci	r25, 0xC3	; 195
  bc:	a1 05       	cpc	r26, r1
  be:	b1 05       	cpc	r27, r1
  c0:	00 f5       	brcc	.+64     	; 0x102 <main+0x72>
  c2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  c6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  ca:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
  ce:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
  d2:	01 96       	adiw	r24, 0x01	; 1
  d4:	a1 1d       	adc	r26, r1
  d6:	b1 1d       	adc	r27, r1
  d8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  dc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  e0:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <_edata+0x2>
  e4:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <_edata+0x3>
  e8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  ec:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  f0:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
  f4:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
  f8:	81 35       	cpi	r24, 0x51	; 81
  fa:	93 4c       	sbci	r25, 0xC3	; 195
  fc:	a1 05       	cpc	r26, r1
  fe:	b1 05       	cpc	r27, r1
 100:	00 f3       	brcs	.-64     	; 0xc2 <main+0x32>
		
		PORTB = 0x00;		//PORTB in iom328p.h
 102:	15 b8       	out	0x05, r1	; 5
		
		for (cnt=0; cnt<=50000; cnt++) {;}
 104:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
 108:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <_edata+0x1>
 10c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <_edata+0x2>
 110:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <_edata+0x3>
 114:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 118:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 11c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
 120:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
 124:	81 35       	cpi	r24, 0x51	; 81
 126:	93 4c       	sbci	r25, 0xC3	; 195
 128:	a1 05       	cpc	r26, r1
 12a:	b1 05       	cpc	r27, r1
 12c:	08 f0       	brcs	.+2      	; 0x130 <main+0xa0>
 12e:	b3 cf       	rjmp	.-154    	; 0x96 <main+0x6>
 130:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 134:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 138:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
 13c:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
 140:	01 96       	adiw	r24, 0x01	; 1
 142:	a1 1d       	adc	r26, r1
 144:	b1 1d       	adc	r27, r1
 146:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 14a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 14e:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <_edata+0x2>
 152:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <_edata+0x3>
 156:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 15a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 15e:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
 162:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
 166:	81 35       	cpi	r24, 0x51	; 81
 168:	93 4c       	sbci	r25, 0xC3	; 195
 16a:	a1 05       	cpc	r26, r1
 16c:	b1 05       	cpc	r27, r1
 16e:	00 f3       	brcs	.-64     	; 0x130 <main+0xa0>
 170:	92 cf       	rjmp	.-220    	; 0x96 <main+0x6>

00000172 <_exit>:
 172:	f8 94       	cli

00000174 <__stop_program>:
 174:	ff cf       	rjmp	.-2      	; 0x174 <__stop_program>
