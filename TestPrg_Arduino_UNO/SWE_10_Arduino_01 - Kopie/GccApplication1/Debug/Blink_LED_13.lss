
Blink_LED_13.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000052e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800100  00800100  000005a2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000614  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007c8  00000000  00000000  0000063c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000066d  00000000  00000000  00000e04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000255  00000000  00000000  00001471  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000080  00000000  00000000  000016c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e5  00000000  00000000  00001748  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000020d  00000000  00000000  00001b2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001d3a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a6 31       	cpi	r26, 0x16	; 22
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 95 02 	jmp	0x52a	; 0x52a <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
volatile uint8_t Result;


void CalcScaling(float fReceiverMin, float fReceiverMax, float fServoMin, float fServoMax)
{ 
	fM = (fServoMax - fServoMin) / (fReceiverMax - fReceiverMin);
  90:	8d ec       	ldi	r24, 0xCD	; 205
  92:	9c ec       	ldi	r25, 0xCC	; 204
  94:	ac e4       	ldi	r26, 0x4C	; 76
  96:	be e3       	ldi	r27, 0x3E	; 62
  98:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <fM>
  9c:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <fM+0x1>
  a0:	a0 93 10 01 	sts	0x0110, r26	; 0x800110 <fM+0x2>
  a4:	b0 93 11 01 	sts	0x0111, r27	; 0x800111 <fM+0x3>
	fT = fServoMax- (fM * fReceiverMax);
  a8:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <fM>
  ac:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <fM+0x1>
  b0:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <fM+0x2>
  b4:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <fM+0x3>
  b8:	20 e0       	ldi	r18, 0x00	; 0
  ba:	30 e0       	ldi	r19, 0x00	; 0
  bc:	4c ed       	ldi	r20, 0xDC	; 220
  be:	52 e4       	ldi	r21, 0x42	; 66
  c0:	0e 94 28 02 	call	0x450	; 0x450 <__mulsf3>
  c4:	9b 01       	movw	r18, r22
  c6:	ac 01       	movw	r20, r24
  c8:	60 e0       	ldi	r22, 0x00	; 0
  ca:	70 e0       	ldi	r23, 0x00	; 0
  cc:	80 ee       	ldi	r24, 0xE0	; 224
  ce:	91 e4       	ldi	r25, 0x41	; 65
  d0:	0e 94 3b 01 	call	0x276	; 0x276 <__subsf3>
  d4:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <fT>
  d8:	70 93 02 01 	sts	0x0102, r23	; 0x800102 <fT+0x1>
  dc:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <fT+0x2>
  e0:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <fT+0x3>
	//////float m;
	//////float t;
	
	CalcScaling(ReceiverMin, ReceiverMax, ServoMin2, ServoMax2);
	
	cnt = 5;
  e4:	85 e0       	ldi	r24, 0x05	; 5
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	a0 e0       	ldi	r26, 0x00	; 0
  ea:	b0 e0       	ldi	r27, 0x00	; 0
  ec:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <cnt>
  f0:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <cnt+0x1>
  f4:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <cnt+0x2>
  f8:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <cnt+0x3>
	
	ServoPWM = 0xEF;
  fc:	8f ee       	ldi	r24, 0xEF	; 239
  fe:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <ServoPWM>
	Result = ServoPWM & (1 << PINB4);
 102:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <ServoPWM>
 106:	80 71       	andi	r24, 0x10	; 16
 108:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	
	fReceiver = 52;
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	a0 e5       	ldi	r26, 0x50	; 80
 112:	b2 e4       	ldi	r27, 0x42	; 66
 114:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <fReceiver>
 118:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <fReceiver+0x1>
 11c:	a0 93 07 01 	sts	0x0107, r26	; 0x800107 <fReceiver+0x2>
 120:	b0 93 08 01 	sts	0x0108, r27	; 0x800108 <fReceiver+0x3>
	fServo = ((fM * fReceiver) + fT) + 0.5;
 124:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <fM>
 128:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <fM+0x1>
 12c:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <fM+0x2>
 130:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <fM+0x3>
 134:	20 91 05 01 	lds	r18, 0x0105	; 0x800105 <fReceiver>
 138:	30 91 06 01 	lds	r19, 0x0106	; 0x800106 <fReceiver+0x1>
 13c:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <fReceiver+0x2>
 140:	50 91 08 01 	lds	r21, 0x0108	; 0x800108 <fReceiver+0x3>
 144:	c0 90 01 01 	lds	r12, 0x0101	; 0x800101 <fT>
 148:	d0 90 02 01 	lds	r13, 0x0102	; 0x800102 <fT+0x1>
 14c:	e0 90 03 01 	lds	r14, 0x0103	; 0x800103 <fT+0x2>
 150:	f0 90 04 01 	lds	r15, 0x0104	; 0x800104 <fT+0x3>
 154:	0e 94 28 02 	call	0x450	; 0x450 <__mulsf3>
 158:	a7 01       	movw	r20, r14
 15a:	96 01       	movw	r18, r12
 15c:	0e 94 3c 01 	call	0x278	; 0x278 <__addsf3>
 160:	20 e0       	ldi	r18, 0x00	; 0
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	40 e0       	ldi	r20, 0x00	; 0
 166:	5f e3       	ldi	r21, 0x3F	; 63
 168:	0e 94 3c 01 	call	0x278	; 0x278 <__addsf3>
 16c:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <fServo>
 170:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <fServo+0x1>
 174:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <fServo+0x2>
 178:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <fServo+0x3>
	
	ServoPWM = fServo;
 17c:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <fServo>
 180:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <fServo+0x1>
 184:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <fServo+0x2>
 188:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <fServo+0x3>
 18c:	0e 94 a8 01 	call	0x350	; 0x350 <__fixunssfsi>
 190:	60 93 0d 01 	sts	0x010D, r22	; 0x80010d <ServoPWM>
	
	

	//DDRB = 0b11111111;		//DDRB in iom328p.h
	//DDRB = 0b00110000;		//DDRB in iom328p.h
	DDRB = (1 << PORTB4 | 1 << PORTB5);
 194:	80 e3       	ldi	r24, 0x30	; 48
 196:	84 b9       	out	0x04, r24	; 4
	 
	while (1)
	{	PORTB = 0x30;		//PORTB in iom328p.h
 198:	20 e3       	ldi	r18, 0x30	; 48
 19a:	25 b9       	out	0x05, r18	; 5
		
		for (cnt=0; cnt<=50000; cnt++) {;}
 19c:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <cnt>
 1a0:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <cnt+0x1>
 1a4:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <cnt+0x2>
 1a8:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <cnt+0x3>
 1ac:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <cnt>
 1b0:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <cnt+0x1>
 1b4:	a0 91 0b 01 	lds	r26, 0x010B	; 0x80010b <cnt+0x2>
 1b8:	b0 91 0c 01 	lds	r27, 0x010C	; 0x80010c <cnt+0x3>
 1bc:	81 35       	cpi	r24, 0x51	; 81
 1be:	93 4c       	sbci	r25, 0xC3	; 195
 1c0:	a1 05       	cpc	r26, r1
 1c2:	b1 05       	cpc	r27, r1
 1c4:	00 f5       	brcc	.+64     	; 0x206 <main+0x176>
 1c6:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <cnt>
 1ca:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <cnt+0x1>
 1ce:	a0 91 0b 01 	lds	r26, 0x010B	; 0x80010b <cnt+0x2>
 1d2:	b0 91 0c 01 	lds	r27, 0x010C	; 0x80010c <cnt+0x3>
 1d6:	01 96       	adiw	r24, 0x01	; 1
 1d8:	a1 1d       	adc	r26, r1
 1da:	b1 1d       	adc	r27, r1
 1dc:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <cnt>
 1e0:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <cnt+0x1>
 1e4:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <cnt+0x2>
 1e8:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <cnt+0x3>
 1ec:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <cnt>
 1f0:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <cnt+0x1>
 1f4:	a0 91 0b 01 	lds	r26, 0x010B	; 0x80010b <cnt+0x2>
 1f8:	b0 91 0c 01 	lds	r27, 0x010C	; 0x80010c <cnt+0x3>
 1fc:	81 35       	cpi	r24, 0x51	; 81
 1fe:	93 4c       	sbci	r25, 0xC3	; 195
 200:	a1 05       	cpc	r26, r1
 202:	b1 05       	cpc	r27, r1
 204:	00 f3       	brcs	.-64     	; 0x1c6 <main+0x136>
		
		PORTB = 0x00;		//PORTB in iom328p.h
 206:	15 b8       	out	0x05, r1	; 5
		
		for (cnt=0; cnt<=50000; cnt++) {;}
 208:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <cnt>
 20c:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <cnt+0x1>
 210:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <cnt+0x2>
 214:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <cnt+0x3>
 218:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <cnt>
 21c:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <cnt+0x1>
 220:	a0 91 0b 01 	lds	r26, 0x010B	; 0x80010b <cnt+0x2>
 224:	b0 91 0c 01 	lds	r27, 0x010C	; 0x80010c <cnt+0x3>
 228:	81 35       	cpi	r24, 0x51	; 81
 22a:	93 4c       	sbci	r25, 0xC3	; 195
 22c:	a1 05       	cpc	r26, r1
 22e:	b1 05       	cpc	r27, r1
 230:	08 f0       	brcs	.+2      	; 0x234 <main+0x1a4>
 232:	b3 cf       	rjmp	.-154    	; 0x19a <main+0x10a>
 234:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <cnt>
 238:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <cnt+0x1>
 23c:	a0 91 0b 01 	lds	r26, 0x010B	; 0x80010b <cnt+0x2>
 240:	b0 91 0c 01 	lds	r27, 0x010C	; 0x80010c <cnt+0x3>
 244:	01 96       	adiw	r24, 0x01	; 1
 246:	a1 1d       	adc	r26, r1
 248:	b1 1d       	adc	r27, r1
 24a:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <cnt>
 24e:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <cnt+0x1>
 252:	a0 93 0b 01 	sts	0x010B, r26	; 0x80010b <cnt+0x2>
 256:	b0 93 0c 01 	sts	0x010C, r27	; 0x80010c <cnt+0x3>
 25a:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <cnt>
 25e:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <cnt+0x1>
 262:	a0 91 0b 01 	lds	r26, 0x010B	; 0x80010b <cnt+0x2>
 266:	b0 91 0c 01 	lds	r27, 0x010C	; 0x80010c <cnt+0x3>
 26a:	81 35       	cpi	r24, 0x51	; 81
 26c:	93 4c       	sbci	r25, 0xC3	; 195
 26e:	a1 05       	cpc	r26, r1
 270:	b1 05       	cpc	r27, r1
 272:	00 f3       	brcs	.-64     	; 0x234 <main+0x1a4>
 274:	92 cf       	rjmp	.-220    	; 0x19a <main+0x10a>

00000276 <__subsf3>:
 276:	50 58       	subi	r21, 0x80	; 128

00000278 <__addsf3>:
 278:	bb 27       	eor	r27, r27
 27a:	aa 27       	eor	r26, r26
 27c:	0e 94 53 01 	call	0x2a6	; 0x2a6 <__addsf3x>
 280:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_round>
 284:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__fp_pscA>
 288:	38 f0       	brcs	.+14     	; 0x298 <__addsf3+0x20>
 28a:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__fp_pscB>
 28e:	20 f0       	brcs	.+8      	; 0x298 <__addsf3+0x20>
 290:	39 f4       	brne	.+14     	; 0x2a0 <__addsf3+0x28>
 292:	9f 3f       	cpi	r25, 0xFF	; 255
 294:	19 f4       	brne	.+6      	; 0x29c <__addsf3+0x24>
 296:	26 f4       	brtc	.+8      	; 0x2a0 <__addsf3+0x28>
 298:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__fp_nan>
 29c:	0e f4       	brtc	.+2      	; 0x2a0 <__addsf3+0x28>
 29e:	e0 95       	com	r30
 2a0:	e7 fb       	bst	r30, 7
 2a2:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_inf>

000002a6 <__addsf3x>:
 2a6:	e9 2f       	mov	r30, r25
 2a8:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__fp_split3>
 2ac:	58 f3       	brcs	.-42     	; 0x284 <__addsf3+0xc>
 2ae:	ba 17       	cp	r27, r26
 2b0:	62 07       	cpc	r22, r18
 2b2:	73 07       	cpc	r23, r19
 2b4:	84 07       	cpc	r24, r20
 2b6:	95 07       	cpc	r25, r21
 2b8:	20 f0       	brcs	.+8      	; 0x2c2 <__addsf3x+0x1c>
 2ba:	79 f4       	brne	.+30     	; 0x2da <__addsf3x+0x34>
 2bc:	a6 f5       	brtc	.+104    	; 0x326 <__addsf3x+0x80>
 2be:	0c 94 21 02 	jmp	0x442	; 0x442 <__fp_zero>
 2c2:	0e f4       	brtc	.+2      	; 0x2c6 <__addsf3x+0x20>
 2c4:	e0 95       	com	r30
 2c6:	0b 2e       	mov	r0, r27
 2c8:	ba 2f       	mov	r27, r26
 2ca:	a0 2d       	mov	r26, r0
 2cc:	0b 01       	movw	r0, r22
 2ce:	b9 01       	movw	r22, r18
 2d0:	90 01       	movw	r18, r0
 2d2:	0c 01       	movw	r0, r24
 2d4:	ca 01       	movw	r24, r20
 2d6:	a0 01       	movw	r20, r0
 2d8:	11 24       	eor	r1, r1
 2da:	ff 27       	eor	r31, r31
 2dc:	59 1b       	sub	r21, r25
 2de:	99 f0       	breq	.+38     	; 0x306 <__addsf3x+0x60>
 2e0:	59 3f       	cpi	r21, 0xF9	; 249
 2e2:	50 f4       	brcc	.+20     	; 0x2f8 <__addsf3x+0x52>
 2e4:	50 3e       	cpi	r21, 0xE0	; 224
 2e6:	68 f1       	brcs	.+90     	; 0x342 <__addsf3x+0x9c>
 2e8:	1a 16       	cp	r1, r26
 2ea:	f0 40       	sbci	r31, 0x00	; 0
 2ec:	a2 2f       	mov	r26, r18
 2ee:	23 2f       	mov	r18, r19
 2f0:	34 2f       	mov	r19, r20
 2f2:	44 27       	eor	r20, r20
 2f4:	58 5f       	subi	r21, 0xF8	; 248
 2f6:	f3 cf       	rjmp	.-26     	; 0x2de <__addsf3x+0x38>
 2f8:	46 95       	lsr	r20
 2fa:	37 95       	ror	r19
 2fc:	27 95       	ror	r18
 2fe:	a7 95       	ror	r26
 300:	f0 40       	sbci	r31, 0x00	; 0
 302:	53 95       	inc	r21
 304:	c9 f7       	brne	.-14     	; 0x2f8 <__addsf3x+0x52>
 306:	7e f4       	brtc	.+30     	; 0x326 <__addsf3x+0x80>
 308:	1f 16       	cp	r1, r31
 30a:	ba 0b       	sbc	r27, r26
 30c:	62 0b       	sbc	r22, r18
 30e:	73 0b       	sbc	r23, r19
 310:	84 0b       	sbc	r24, r20
 312:	ba f0       	brmi	.+46     	; 0x342 <__addsf3x+0x9c>
 314:	91 50       	subi	r25, 0x01	; 1
 316:	a1 f0       	breq	.+40     	; 0x340 <__addsf3x+0x9a>
 318:	ff 0f       	add	r31, r31
 31a:	bb 1f       	adc	r27, r27
 31c:	66 1f       	adc	r22, r22
 31e:	77 1f       	adc	r23, r23
 320:	88 1f       	adc	r24, r24
 322:	c2 f7       	brpl	.-16     	; 0x314 <__addsf3x+0x6e>
 324:	0e c0       	rjmp	.+28     	; 0x342 <__addsf3x+0x9c>
 326:	ba 0f       	add	r27, r26
 328:	62 1f       	adc	r22, r18
 32a:	73 1f       	adc	r23, r19
 32c:	84 1f       	adc	r24, r20
 32e:	48 f4       	brcc	.+18     	; 0x342 <__addsf3x+0x9c>
 330:	87 95       	ror	r24
 332:	77 95       	ror	r23
 334:	67 95       	ror	r22
 336:	b7 95       	ror	r27
 338:	f7 95       	ror	r31
 33a:	9e 3f       	cpi	r25, 0xFE	; 254
 33c:	08 f0       	brcs	.+2      	; 0x340 <__addsf3x+0x9a>
 33e:	b0 cf       	rjmp	.-160    	; 0x2a0 <__addsf3+0x28>
 340:	93 95       	inc	r25
 342:	88 0f       	add	r24, r24
 344:	08 f0       	brcs	.+2      	; 0x348 <__addsf3x+0xa2>
 346:	99 27       	eor	r25, r25
 348:	ee 0f       	add	r30, r30
 34a:	97 95       	ror	r25
 34c:	87 95       	ror	r24
 34e:	08 95       	ret

00000350 <__fixunssfsi>:
 350:	0e 94 07 02 	call	0x40e	; 0x40e <__fp_splitA>
 354:	88 f0       	brcs	.+34     	; 0x378 <__fixunssfsi+0x28>
 356:	9f 57       	subi	r25, 0x7F	; 127
 358:	98 f0       	brcs	.+38     	; 0x380 <__fixunssfsi+0x30>
 35a:	b9 2f       	mov	r27, r25
 35c:	99 27       	eor	r25, r25
 35e:	b7 51       	subi	r27, 0x17	; 23
 360:	b0 f0       	brcs	.+44     	; 0x38e <__fixunssfsi+0x3e>
 362:	e1 f0       	breq	.+56     	; 0x39c <__fixunssfsi+0x4c>
 364:	66 0f       	add	r22, r22
 366:	77 1f       	adc	r23, r23
 368:	88 1f       	adc	r24, r24
 36a:	99 1f       	adc	r25, r25
 36c:	1a f0       	brmi	.+6      	; 0x374 <__fixunssfsi+0x24>
 36e:	ba 95       	dec	r27
 370:	c9 f7       	brne	.-14     	; 0x364 <__fixunssfsi+0x14>
 372:	14 c0       	rjmp	.+40     	; 0x39c <__fixunssfsi+0x4c>
 374:	b1 30       	cpi	r27, 0x01	; 1
 376:	91 f0       	breq	.+36     	; 0x39c <__fixunssfsi+0x4c>
 378:	0e 94 21 02 	call	0x442	; 0x442 <__fp_zero>
 37c:	b1 e0       	ldi	r27, 0x01	; 1
 37e:	08 95       	ret
 380:	0c 94 21 02 	jmp	0x442	; 0x442 <__fp_zero>
 384:	67 2f       	mov	r22, r23
 386:	78 2f       	mov	r23, r24
 388:	88 27       	eor	r24, r24
 38a:	b8 5f       	subi	r27, 0xF8	; 248
 38c:	39 f0       	breq	.+14     	; 0x39c <__fixunssfsi+0x4c>
 38e:	b9 3f       	cpi	r27, 0xF9	; 249
 390:	cc f3       	brlt	.-14     	; 0x384 <__fixunssfsi+0x34>
 392:	86 95       	lsr	r24
 394:	77 95       	ror	r23
 396:	67 95       	ror	r22
 398:	b3 95       	inc	r27
 39a:	d9 f7       	brne	.-10     	; 0x392 <__fixunssfsi+0x42>
 39c:	3e f4       	brtc	.+14     	; 0x3ac <__fixunssfsi+0x5c>
 39e:	90 95       	com	r25
 3a0:	80 95       	com	r24
 3a2:	70 95       	com	r23
 3a4:	61 95       	neg	r22
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255
 3a8:	8f 4f       	sbci	r24, 0xFF	; 255
 3aa:	9f 4f       	sbci	r25, 0xFF	; 255
 3ac:	08 95       	ret

000003ae <__fp_inf>:
 3ae:	97 f9       	bld	r25, 7
 3b0:	9f 67       	ori	r25, 0x7F	; 127
 3b2:	80 e8       	ldi	r24, 0x80	; 128
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	60 e0       	ldi	r22, 0x00	; 0
 3b8:	08 95       	ret

000003ba <__fp_nan>:
 3ba:	9f ef       	ldi	r25, 0xFF	; 255
 3bc:	80 ec       	ldi	r24, 0xC0	; 192
 3be:	08 95       	ret

000003c0 <__fp_pscA>:
 3c0:	00 24       	eor	r0, r0
 3c2:	0a 94       	dec	r0
 3c4:	16 16       	cp	r1, r22
 3c6:	17 06       	cpc	r1, r23
 3c8:	18 06       	cpc	r1, r24
 3ca:	09 06       	cpc	r0, r25
 3cc:	08 95       	ret

000003ce <__fp_pscB>:
 3ce:	00 24       	eor	r0, r0
 3d0:	0a 94       	dec	r0
 3d2:	12 16       	cp	r1, r18
 3d4:	13 06       	cpc	r1, r19
 3d6:	14 06       	cpc	r1, r20
 3d8:	05 06       	cpc	r0, r21
 3da:	08 95       	ret

000003dc <__fp_round>:
 3dc:	09 2e       	mov	r0, r25
 3de:	03 94       	inc	r0
 3e0:	00 0c       	add	r0, r0
 3e2:	11 f4       	brne	.+4      	; 0x3e8 <__fp_round+0xc>
 3e4:	88 23       	and	r24, r24
 3e6:	52 f0       	brmi	.+20     	; 0x3fc <__fp_round+0x20>
 3e8:	bb 0f       	add	r27, r27
 3ea:	40 f4       	brcc	.+16     	; 0x3fc <__fp_round+0x20>
 3ec:	bf 2b       	or	r27, r31
 3ee:	11 f4       	brne	.+4      	; 0x3f4 <__fp_round+0x18>
 3f0:	60 ff       	sbrs	r22, 0
 3f2:	04 c0       	rjmp	.+8      	; 0x3fc <__fp_round+0x20>
 3f4:	6f 5f       	subi	r22, 0xFF	; 255
 3f6:	7f 4f       	sbci	r23, 0xFF	; 255
 3f8:	8f 4f       	sbci	r24, 0xFF	; 255
 3fa:	9f 4f       	sbci	r25, 0xFF	; 255
 3fc:	08 95       	ret

000003fe <__fp_split3>:
 3fe:	57 fd       	sbrc	r21, 7
 400:	90 58       	subi	r25, 0x80	; 128
 402:	44 0f       	add	r20, r20
 404:	55 1f       	adc	r21, r21
 406:	59 f0       	breq	.+22     	; 0x41e <__fp_splitA+0x10>
 408:	5f 3f       	cpi	r21, 0xFF	; 255
 40a:	71 f0       	breq	.+28     	; 0x428 <__fp_splitA+0x1a>
 40c:	47 95       	ror	r20

0000040e <__fp_splitA>:
 40e:	88 0f       	add	r24, r24
 410:	97 fb       	bst	r25, 7
 412:	99 1f       	adc	r25, r25
 414:	61 f0       	breq	.+24     	; 0x42e <__fp_splitA+0x20>
 416:	9f 3f       	cpi	r25, 0xFF	; 255
 418:	79 f0       	breq	.+30     	; 0x438 <__fp_splitA+0x2a>
 41a:	87 95       	ror	r24
 41c:	08 95       	ret
 41e:	12 16       	cp	r1, r18
 420:	13 06       	cpc	r1, r19
 422:	14 06       	cpc	r1, r20
 424:	55 1f       	adc	r21, r21
 426:	f2 cf       	rjmp	.-28     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 428:	46 95       	lsr	r20
 42a:	f1 df       	rcall	.-30     	; 0x40e <__fp_splitA>
 42c:	08 c0       	rjmp	.+16     	; 0x43e <__fp_splitA+0x30>
 42e:	16 16       	cp	r1, r22
 430:	17 06       	cpc	r1, r23
 432:	18 06       	cpc	r1, r24
 434:	99 1f       	adc	r25, r25
 436:	f1 cf       	rjmp	.-30     	; 0x41a <__fp_splitA+0xc>
 438:	86 95       	lsr	r24
 43a:	71 05       	cpc	r23, r1
 43c:	61 05       	cpc	r22, r1
 43e:	08 94       	sec
 440:	08 95       	ret

00000442 <__fp_zero>:
 442:	e8 94       	clt

00000444 <__fp_szero>:
 444:	bb 27       	eor	r27, r27
 446:	66 27       	eor	r22, r22
 448:	77 27       	eor	r23, r23
 44a:	cb 01       	movw	r24, r22
 44c:	97 f9       	bld	r25, 7
 44e:	08 95       	ret

00000450 <__mulsf3>:
 450:	0e 94 3b 02 	call	0x476	; 0x476 <__mulsf3x>
 454:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_round>
 458:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__fp_pscA>
 45c:	38 f0       	brcs	.+14     	; 0x46c <__mulsf3+0x1c>
 45e:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__fp_pscB>
 462:	20 f0       	brcs	.+8      	; 0x46c <__mulsf3+0x1c>
 464:	95 23       	and	r25, r21
 466:	11 f0       	breq	.+4      	; 0x46c <__mulsf3+0x1c>
 468:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_inf>
 46c:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <__fp_nan>
 470:	11 24       	eor	r1, r1
 472:	0c 94 22 02 	jmp	0x444	; 0x444 <__fp_szero>

00000476 <__mulsf3x>:
 476:	0e 94 ff 01 	call	0x3fe	; 0x3fe <__fp_split3>
 47a:	70 f3       	brcs	.-36     	; 0x458 <__mulsf3+0x8>

0000047c <__mulsf3_pse>:
 47c:	95 9f       	mul	r25, r21
 47e:	c1 f3       	breq	.-16     	; 0x470 <__mulsf3+0x20>
 480:	95 0f       	add	r25, r21
 482:	50 e0       	ldi	r21, 0x00	; 0
 484:	55 1f       	adc	r21, r21
 486:	62 9f       	mul	r22, r18
 488:	f0 01       	movw	r30, r0
 48a:	72 9f       	mul	r23, r18
 48c:	bb 27       	eor	r27, r27
 48e:	f0 0d       	add	r31, r0
 490:	b1 1d       	adc	r27, r1
 492:	63 9f       	mul	r22, r19
 494:	aa 27       	eor	r26, r26
 496:	f0 0d       	add	r31, r0
 498:	b1 1d       	adc	r27, r1
 49a:	aa 1f       	adc	r26, r26
 49c:	64 9f       	mul	r22, r20
 49e:	66 27       	eor	r22, r22
 4a0:	b0 0d       	add	r27, r0
 4a2:	a1 1d       	adc	r26, r1
 4a4:	66 1f       	adc	r22, r22
 4a6:	82 9f       	mul	r24, r18
 4a8:	22 27       	eor	r18, r18
 4aa:	b0 0d       	add	r27, r0
 4ac:	a1 1d       	adc	r26, r1
 4ae:	62 1f       	adc	r22, r18
 4b0:	73 9f       	mul	r23, r19
 4b2:	b0 0d       	add	r27, r0
 4b4:	a1 1d       	adc	r26, r1
 4b6:	62 1f       	adc	r22, r18
 4b8:	83 9f       	mul	r24, r19
 4ba:	a0 0d       	add	r26, r0
 4bc:	61 1d       	adc	r22, r1
 4be:	22 1f       	adc	r18, r18
 4c0:	74 9f       	mul	r23, r20
 4c2:	33 27       	eor	r19, r19
 4c4:	a0 0d       	add	r26, r0
 4c6:	61 1d       	adc	r22, r1
 4c8:	23 1f       	adc	r18, r19
 4ca:	84 9f       	mul	r24, r20
 4cc:	60 0d       	add	r22, r0
 4ce:	21 1d       	adc	r18, r1
 4d0:	82 2f       	mov	r24, r18
 4d2:	76 2f       	mov	r23, r22
 4d4:	6a 2f       	mov	r22, r26
 4d6:	11 24       	eor	r1, r1
 4d8:	9f 57       	subi	r25, 0x7F	; 127
 4da:	50 40       	sbci	r21, 0x00	; 0
 4dc:	9a f0       	brmi	.+38     	; 0x504 <__mulsf3_pse+0x88>
 4de:	f1 f0       	breq	.+60     	; 0x51c <__mulsf3_pse+0xa0>
 4e0:	88 23       	and	r24, r24
 4e2:	4a f0       	brmi	.+18     	; 0x4f6 <__mulsf3_pse+0x7a>
 4e4:	ee 0f       	add	r30, r30
 4e6:	ff 1f       	adc	r31, r31
 4e8:	bb 1f       	adc	r27, r27
 4ea:	66 1f       	adc	r22, r22
 4ec:	77 1f       	adc	r23, r23
 4ee:	88 1f       	adc	r24, r24
 4f0:	91 50       	subi	r25, 0x01	; 1
 4f2:	50 40       	sbci	r21, 0x00	; 0
 4f4:	a9 f7       	brne	.-22     	; 0x4e0 <__mulsf3_pse+0x64>
 4f6:	9e 3f       	cpi	r25, 0xFE	; 254
 4f8:	51 05       	cpc	r21, r1
 4fa:	80 f0       	brcs	.+32     	; 0x51c <__mulsf3_pse+0xa0>
 4fc:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_inf>
 500:	0c 94 22 02 	jmp	0x444	; 0x444 <__fp_szero>
 504:	5f 3f       	cpi	r21, 0xFF	; 255
 506:	e4 f3       	brlt	.-8      	; 0x500 <__mulsf3_pse+0x84>
 508:	98 3e       	cpi	r25, 0xE8	; 232
 50a:	d4 f3       	brlt	.-12     	; 0x500 <__mulsf3_pse+0x84>
 50c:	86 95       	lsr	r24
 50e:	77 95       	ror	r23
 510:	67 95       	ror	r22
 512:	b7 95       	ror	r27
 514:	f7 95       	ror	r31
 516:	e7 95       	ror	r30
 518:	9f 5f       	subi	r25, 0xFF	; 255
 51a:	c1 f7       	brne	.-16     	; 0x50c <__mulsf3_pse+0x90>
 51c:	fe 2b       	or	r31, r30
 51e:	88 0f       	add	r24, r24
 520:	91 1d       	adc	r25, r1
 522:	96 95       	lsr	r25
 524:	87 95       	ror	r24
 526:	97 f9       	bld	r25, 7
 528:	08 95       	ret

0000052a <_exit>:
 52a:	f8 94       	cli

0000052c <__stop_program>:
 52c:	ff cf       	rjmp	.-2      	; 0x52c <__stop_program>
